&НаКлиенте
Перем СтрокаВвода;

&НаКлиенте
Процедура ВыводОповещенияПользователю(ПараметрСтрока)  
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = ПараметрСтрока;
	СообщениеПользователю.Сообщить();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуВводаДанных() Экспорт 
	СтрокаВвода = Объект.СтрокаВводаДанных;
	Возврат СтрокаВвода;
КонецФункции

#Область Строки 

&НаКлиенте
Процедура ДлинаСтроки(Команда)
	РезультирующаяСтрока = "Длина строки " + СтрДлина(ПолучитьСтрокуВводаДанных()) + " символов";
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СокращениеСтрокиСлева(Команда)
	РезультирующаяСтрока = "Пробелы слева у строки устранены - " + СокрЛ(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СокращениеСтрокиСправа(Команда)
	РезультирующаяСтрока = "Пробелы справа у строки устранены - " + СокрП(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СокращениеСтрокиСлеваСправа(Команда)
	РезультирующаяСтрока = "Пробелы слева и справа у строки устранены - " + СокрЛП(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЭлементыСправа(Команда)
	КоличествоЭлементовСправа = ЭтаФорма.КоличествоСимволовСправа;
	РезультирующаяСтрока = "" + КоличествоЭлементовСправа + " символов справа - " + Прав(ПолучитьСтрокуВводаДанных(),ЭтаФорма.КоличествоСимволовСправа);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЭлементыСлева(Команда)
	РезультирующаяСтрока = "" + КоличествоСимволовСлева + " символов слева - " + Лев(ПолучитьСтрокуВводаДанных(),КоличествоСимволовСлева);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЭлементыСредние(Команда)
	РезультирующаяСтрока = "" + КоличествоСимволов + " символов, начиная с " + ЭлементВстроке + " - " + Сред(ПолучитьСтрокуВводаДанных(),ЭлементВстроке,КоличествоСимволов);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СтрокаНайти(Команда)
	РезультирующаяСтрока = "Подстрока поиска начинается с символа - " + СтрНайти(ПолучитьСтрокуВводаДанных(),ПодстрокаПоиска,,);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ВерхнийРегистр(Команда)
	РезультирующаяСтрока = "Перевели строку в верхний регистр - " + ВРег(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура НижнийРегистр(Команда)
	РезультирующаяСтрока = "Перевели строку в нижний регистр " + НРег(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТитульныйРегистр(Команда)
	РезультирующаяСтрока  = "Перевели строку в титульный регистр - " + ТРег(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КодЮникод(Команда)
	РезультирующаяСтрока = "Сивол по коду Unicode - " + Символ(КодЮникод);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КодСимволаВСтроке(Команда)
	РезультирующаяСтрока = "Код Unicode выбранного символа - " + КодСимвола(ПолучитьСтрокуВводаДанных(),НомерСимволаВСтроке);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаНаПустуюСтроку(Команда)
	РезультирующаяСтрока = "Это пустая строка - " + ПустаяСтрока(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьПодстроку(Команда)
	РезультирующаяСтрока = "Строка после замены - " + СтрЗаменить(ПолучитьСтрокуВводаДанных(),ЗаменяемаяСтрока,ПодстрокаЗамены);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЧислоСтрок(Команда)
	РезультирующаяСтрока = "Количество строк - " + СтрЧислоСтрок(ПолучитьСтрокуВводаДанных());
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСтроку(Команда)
	РезультирующаяСтрока = "Полученная строка - " + СтрПолучитьСтроку(ПолучитьСтрокуВводаДанных(),НомерСтроки);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЧислоВхождений(Команда)
	РезультирующаяСтрока = "Количество вхождений - " + СтрЧислоВхождений(ПолучитьСтрокуВводаДанных(),СтрокаЧислаВхождений);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СравнениеСтрок(Команда)
	РезультирущаяСтрока = СтрСравнить(ПолучитьСтрокуВводаДанных(),ВтораяСтрока);
	
	Если РезультирущаяСтрока > 0 Тогда 
		Сообщить("Строка ввода данных длиннее второй");
	ИначеЕсли РезультирущаяСтрока < 0 Тогда 
		Сообщить("Вторая строка длиннее строки ввода данных");
	Иначе 
		Сообщить("Обе строки равны по длине");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОпределениеНачалаСтроки(Команда)
	Если ПустаяСтрока(СтрокаПоискаНачала)Тогда 
		Возврат;
	КонецЕсли;
	
	РезультирующаяСтрока = "Начало строки ввода данных совпадает с подстрокой начала - " + СтрНачинаетсяС(ПолучитьСтрокуВводаДанных(),СтрокаПоискаНачала);	
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ОпределениеКонцаСтроки(Команда)
	Если ПустаяСтрока(СтрокаПоискаКонца)Тогда 
		Возврат;
	КонецЕсли;   
	
	РезультирующаяСтрока = "Конец строки ввода данных строки совпадает с подстрокой конца - " + СтрЗаканчиваетсяНа(ПолучитьСтрокуВводаДанных(),СтрокаПоискаКонца);	
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура РазделениеСтроки(Команда)
	РезультирующаяСтрока = СтрРазделить(ПолучитьСтрокуВводаДанных(),Разделитель,);
	
	Для Каждого РезультатРазбиения Из РезультирующаяСтрока Цикл 
		Сообщить(РезультатРазбиения);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоединитьСтроки(Команда)
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Строка1);
	МассивСтрок.Добавить(Строка2);
	МассивСтрок.Добавить(Строка3);
	
	РезультирующаяСтрока = "Результат соединения строк - " + СтрСоединить(МассивСтрок,ПримерРазделителя);
	ВыводОповещенияПользователю(РезультирующаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область Коллекции

&НаКлиенте
Процедура КоллекцияСтруктура(Команда)
	Стурктура = Новый Структура;
	Стурктура.Вставить("ЧислоСтуктуры",123);
	Стурктура.Вставить("СтрокаСтруктуры", "Это строка");
	Стурктура.Вставить("ДатаСтруктуры",Формат(ТекущаяДата(),"ДФ=dd.MM.yy"));
	
	Для Каждого ЗаписьСтруктуры Из Стурктура Цикл 
		Сообщить("Ключ структуры - " + ЗаписьСтруктуры.Ключ + ", Значение стуктуры - " + ЗаписьСтруктуры.Значение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КоллекцияМассив(Команда)
	
	ТестовыйМассив = Новый Массив;
	
	Для Сч = 0 По 12 Цикл 
		ТестовыйМассив.Добавить(Сч);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Значение элемента массива " + (Сч + 1) + "= " + Сч;
		Сообщение.Сообщить();
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Количество элементов массива " + ТестовыйМассив.Количество() ;
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

